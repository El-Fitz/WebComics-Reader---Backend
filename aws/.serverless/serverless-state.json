{
  "service": {
    "service": "WebComicsReader",
    "serviceObject": {
      "name": "WebComicsReader"
    },
    "provider": {
      "stage": "dev",
      "region": "eu-west-1",
      "variableSyntax": "\\${([ :a-zA-Z0-9._,\\-\\/\\(\\)]+?)}",
      "name": "aws",
      "runtime": "nodejs8.10",
      "environment": {
        "REGION": "eu-west-1",
        "DYNAMODB_TABLE": "ComicStrips"
      },
      "iamRoleStatements": [
        {
          "Effect": "Allow",
          "Action": [
            "dynamodb:DescribeTable",
            "dynamodb:Query",
            "dynamodb:Scan",
            "dynamodb:GetItem",
            "dynamodb:PutItem"
          ],
          "Resource": "arn:aws:dynamodb:eu-west-1:430891671017:table/ComicStrips"
        }
      ],
      "versionFunctions": true,
      "remoteFunctionData": null,
      "compiledCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          },
          "NewStripLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/WebComicsReader-dev-newStrip"
            }
          },
          "GetStripsLogGroup": {
            "Type": "AWS::Logs::LogGroup",
            "Properties": {
              "LogGroupName": "/aws/lambda/WebComicsReader-dev-getStrips"
            }
          },
          "IamRoleLambdaExecution": {
            "Type": "AWS::IAM::Role",
            "Properties": {
              "AssumeRolePolicyDocument": {
                "Version": "2012-10-17",
                "Statement": [
                  {
                    "Effect": "Allow",
                    "Principal": {
                      "Service": [
                        "lambda.amazonaws.com"
                      ]
                    },
                    "Action": [
                      "sts:AssumeRole"
                    ]
                  }
                ]
              },
              "Policies": [
                {
                  "PolicyName": {
                    "Fn::Join": [
                      "-",
                      [
                        "dev",
                        "WebComicsReader",
                        "lambda"
                      ]
                    ]
                  },
                  "PolicyDocument": {
                    "Version": "2012-10-17",
                    "Statement": [
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:CreateLogStream"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/WebComicsReader-dev-newStrip:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/WebComicsReader-dev-getStrips:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "logs:PutLogEvents"
                        ],
                        "Resource": [
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/WebComicsReader-dev-newStrip:*:*"
                          },
                          {
                            "Fn::Sub": "arn:aws:logs:${AWS::Region}:${AWS::AccountId}:log-group:/aws/lambda/WebComicsReader-dev-getStrips:*:*"
                          }
                        ]
                      },
                      {
                        "Effect": "Allow",
                        "Action": [
                          "dynamodb:DescribeTable",
                          "dynamodb:Query",
                          "dynamodb:Scan",
                          "dynamodb:GetItem",
                          "dynamodb:PutItem"
                        ],
                        "Resource": "arn:aws:dynamodb:eu-west-1:430891671017:table/ComicStrips"
                      }
                    ]
                  }
                }
              ],
              "Path": "/",
              "RoleName": {
                "Fn::Join": [
                  "-",
                  [
                    "WebComicsReader",
                    "dev",
                    "eu-west-1",
                    "lambdaRole"
                  ]
                ]
              }
            }
          },
          "NewStripLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/WebComicsReader/dev/1528833082450-2018-06-12T19:51:22.450Z/newStrip.zip"
              },
              "FunctionName": "WebComicsReader-dev-newStrip",
              "Handler": "_optimize/WebComicsReader-dev-newStrip/functions/newStrip.httpHandler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "REGION": "eu-west-1",
                  "DYNAMODB_TABLE": "ComicStrips"
                }
              }
            },
            "DependsOn": [
              "NewStripLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "NewStripLambdaVersionFzyImihEklEyYNLeAWxV0E11yFJb4hXTZT60je11wyI": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "NewStripLambdaFunction"
              },
              "CodeSha256": "FzyImihEklEyYNLeAWxV0E11yFJb4hXTZT60je11wyI="
            }
          },
          "GetStripsLambdaFunction": {
            "Type": "AWS::Lambda::Function",
            "Properties": {
              "Code": {
                "S3Bucket": {
                  "Ref": "ServerlessDeploymentBucket"
                },
                "S3Key": "serverless/WebComicsReader/dev/1528833082450-2018-06-12T19:51:22.450Z/getStrips.zip"
              },
              "FunctionName": "WebComicsReader-dev-getStrips",
              "Handler": "_optimize/WebComicsReader-dev-getStrips/functions/getStrips.httpHandler",
              "MemorySize": 1024,
              "Role": {
                "Fn::GetAtt": [
                  "IamRoleLambdaExecution",
                  "Arn"
                ]
              },
              "Runtime": "nodejs8.10",
              "Timeout": 6,
              "Environment": {
                "Variables": {
                  "REGION": "eu-west-1",
                  "DYNAMODB_TABLE": "ComicStrips"
                }
              }
            },
            "DependsOn": [
              "GetStripsLogGroup",
              "IamRoleLambdaExecution"
            ]
          },
          "GetStripsLambdaVersionN7G0eBGMzGeU8Z7vJOFXAdThkv7FmQJJ6AbtvvME": {
            "Type": "AWS::Lambda::Version",
            "DeletionPolicy": "Retain",
            "Properties": {
              "FunctionName": {
                "Ref": "GetStripsLambdaFunction"
              },
              "CodeSha256": "+N7G/0eB+GMzGeU8Z7vJOFXAdThkv7FmQJJ6AbtvvME="
            }
          },
          "ApiGatewayRestApi": {
            "Type": "AWS::ApiGateway::RestApi",
            "Properties": {
              "Name": "dev-WebComicsReader"
            }
          },
          "ApiGatewayResourceComicnameVar": {
            "Type": "AWS::ApiGateway::Resource",
            "Properties": {
              "ParentId": {
                "Fn::GetAtt": [
                  "ApiGatewayRestApi",
                  "RootResourceId"
                ]
              },
              "PathPart": "{comicName}",
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              }
            }
          },
          "ApiGatewayMethodComicnameVarPost": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "POST",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceComicnameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "NewStripLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayMethodComicnameVarGet": {
            "Type": "AWS::ApiGateway::Method",
            "Properties": {
              "HttpMethod": "GET",
              "RequestParameters": {},
              "ResourceId": {
                "Ref": "ApiGatewayResourceComicnameVar"
              },
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "AuthorizationType": "NONE",
              "Integration": {
                "IntegrationHttpMethod": "POST",
                "Type": "AWS_PROXY",
                "Uri": {
                  "Fn::Join": [
                    "",
                    [
                      "arn:aws:apigateway:",
                      {
                        "Ref": "AWS::Region"
                      },
                      ":lambda:path/2015-03-31/functions/",
                      {
                        "Fn::GetAtt": [
                          "GetStripsLambdaFunction",
                          "Arn"
                        ]
                      },
                      "/invocations"
                    ]
                  ]
                }
              },
              "MethodResponses": []
            }
          },
          "ApiGatewayDeployment1528833082460": {
            "Type": "AWS::ApiGateway::Deployment",
            "Properties": {
              "RestApiId": {
                "Ref": "ApiGatewayRestApi"
              },
              "StageName": "dev"
            },
            "DependsOn": [
              "ApiGatewayMethodComicnameVarPost",
              "ApiGatewayMethodComicnameVarGet"
            ]
          },
          "NewStripLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "NewStripLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "GetStripsLambdaPermissionApiGateway": {
            "Type": "AWS::Lambda::Permission",
            "Properties": {
              "FunctionName": {
                "Fn::GetAtt": [
                  "GetStripsLambdaFunction",
                  "Arn"
                ]
              },
              "Action": "lambda:InvokeFunction",
              "Principal": "apigateway.amazonaws.com",
              "SourceArn": {
                "Fn::Join": [
                  "",
                  [
                    "arn:aws:execute-api:",
                    {
                      "Ref": "AWS::Region"
                    },
                    ":",
                    {
                      "Ref": "AWS::AccountId"
                    },
                    ":",
                    {
                      "Ref": "ApiGatewayRestApi"
                    },
                    "/*/*"
                  ]
                ]
              }
            }
          },
          "ComicsStripsDynamoDbTable": {
            "Type": "AWS::DynamoDB::Table",
            "DeletionPolicy": "Retain",
            "Properties": {
              "AttributeDefinitions": [
                {
                  "AttributeName": "comicName",
                  "AttributeType": "S"
                },
                {
                  "AttributeName": "id",
                  "AttributeType": "S"
                }
              ],
              "KeySchema": [
                {
                  "AttributeName": "comicName",
                  "KeyType": "HASH"
                },
                {
                  "AttributeName": "id",
                  "KeyType": "RANGE"
                }
              ],
              "ProvisionedThroughput": {
                "ReadCapacityUnits": 1,
                "WriteCapacityUnits": 1
              },
              "TableName": "ComicStrips"
            }
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          },
          "NewStripLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "NewStripLambdaVersionFzyImihEklEyYNLeAWxV0E11yFJb4hXTZT60je11wyI"
            }
          },
          "GetStripsLambdaFunctionQualifiedArn": {
            "Description": "Current Lambda function version",
            "Value": {
              "Ref": "GetStripsLambdaVersionN7G0eBGMzGeU8Z7vJOFXAdThkv7FmQJJ6AbtvvME"
            }
          },
          "ServiceEndpoint": {
            "Description": "URL of the service endpoint",
            "Value": {
              "Fn::Join": [
                "",
                [
                  "https://",
                  {
                    "Ref": "ApiGatewayRestApi"
                  },
                  ".execute-api.eu-west-1.amazonaws.com/dev"
                ]
              ]
            }
          }
        }
      },
      "coreCloudFormationTemplate": {
        "AWSTemplateFormatVersion": "2010-09-09",
        "Description": "The AWS CloudFormation template for this Serverless application",
        "Resources": {
          "ServerlessDeploymentBucket": {
            "Type": "AWS::S3::Bucket"
          }
        },
        "Outputs": {
          "ServerlessDeploymentBucketName": {
            "Value": {
              "Ref": "ServerlessDeploymentBucket"
            }
          }
        }
      },
      "vpc": {}
    },
    "plugins": [
      "serverless-plugin-optimize"
    ],
    "functions": {
      "newStrip": {
        "handler": "_optimize/WebComicsReader-dev-newStrip/functions/newStrip.httpHandler",
        "events": [
          {
            "http": {
              "path": "{comicName}",
              "method": "post",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "WebComicsReader-dev-newStrip",
        "package": {
          "exclude": [
            "**"
          ],
          "include": [
            "_optimize/WebComicsReader-dev-newStrip/**"
          ]
        },
        "artifact": "/Users/elfitz/Documents/Work/Parsifal/Apps/WebComics Reader/WebComics Reader - Backend/aws/.serverless/newStrip.zip",
        "vpc": {}
      },
      "getStrips": {
        "handler": "_optimize/WebComicsReader-dev-getStrips/functions/getStrips.httpHandler",
        "events": [
          {
            "http": {
              "path": "{comicName}",
              "method": "get",
              "integration": "AWS_PROXY"
            }
          }
        ],
        "name": "WebComicsReader-dev-getStrips",
        "package": {
          "exclude": [
            "**"
          ],
          "include": [
            "_optimize/WebComicsReader-dev-getStrips/**"
          ]
        },
        "artifact": "/Users/elfitz/Documents/Work/Parsifal/Apps/WebComics Reader/WebComics Reader - Backend/aws/.serverless/getStrips.zip",
        "vpc": {}
      }
    },
    "resources": {
      "Resources": {
        "ComicsStripsDynamoDbTable": {
          "Type": "AWS::DynamoDB::Table",
          "DeletionPolicy": "Retain",
          "Properties": {
            "AttributeDefinitions": [
              {
                "AttributeName": "comicName",
                "AttributeType": "S"
              },
              {
                "AttributeName": "id",
                "AttributeType": "S"
              }
            ],
            "KeySchema": [
              {
                "AttributeName": "comicName",
                "KeyType": "HASH"
              },
              {
                "AttributeName": "id",
                "KeyType": "RANGE"
              }
            ],
            "ProvisionedThroughput": {
              "ReadCapacityUnits": 1,
              "WriteCapacityUnits": 1
            },
            "TableName": "ComicStrips"
          }
        }
      },
      "Outputs": {}
    }
  },
  "package": {
    "individually": true,
    "artifactDirectoryName": "serverless/WebComicsReader/dev/1528833082450-2018-06-12T19:51:22.450Z",
    "artifact": ""
  }
}